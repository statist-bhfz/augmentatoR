% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aug_img.R
\name{aug_img}
\alias{aug_img}
\title{Apply augmentations to single image.}
\usage{
aug_img(img, out_width = 224L, out_height = 224L, params = list(flip
  = list(prob = 0.5), flop = list(prob = 0.5), crop = list(width = 180,
  height = 180, x_off = c(0, 30), y_off = c(0, 30)), rotate = list(angle =
  c(-25, 25)), modulate = list(brightness = c(90, 110), saturation = c(95,
  105), hue = c(80, 120))))
}
\arguments{
\item{img}{Image (object of class \code{"magick-image"}).}

\item{out_width}{Output image width (in pixels).}

\item{out_height}{Output image height (in pixels).}

\item{params}{Named list of tranformation parameters (order matters - see Details).
Each name should match one of \code{image_*} function:
\code{"crop"} for \code{image_crop}, \code{"flip"} for \code{image_flip} and so on.
List element contains constant values (image region size - \code{width}, \code{height};
probability of particular transformation -  \code{prob}) and/or ranges
for random parameters of particular transformation (\code{angle}, \code{x_off}).}
}
\value{
Transformed image (cropped or 0-padded if necessary to
\code{(out_width, out_height)} size).
}
\description{
Apply augmentations to single image.
}
\details{
Operations are applied to the image in order specified by \code{params} argument.
Please note that cropped and rotated image is not the same thing as
rotated and cropped one.
Currently implemented transformations:

* flip (parameterized by \code{prob} - probability of vertical reflection)

* flop (parameterized by \code{prob} - probability of horizontal reflection)

* crop (parameterized by
\code{width} - width of cropped region,
\code{higth} - higth of cropped region, \code{x_off} - x offset (min, max),
\code{y_off} - y offset (min, max))

* rotate (parameterized by \code{angle} - rotation angle (min, max))

* modulate (parameterized by
\code{brightness} - brightness shift in  percentage of current value (min, max);
\code{saturation} - saturation shift in  percentage of current value (min, max);
\code{hue} - hue shift in  percentage of current value (min, max))
}
\examples{
frink <- image_read("https://jeroen.github.io/images/frink.png")
aug_img(frink)
aug_img(frink,
        params = list("crop" = list(width = 180, height = 180,
                                    x_off = c(0, 30), y_off = c(0, 30))))
}
